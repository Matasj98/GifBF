{"version":3,"sources":["Store/Actions/setGifList.js","Store/Actions/setSearchTerm.js","Store/Thunk/getTrendingList.js","Store/Thunk/getGifListCustom.js","Store/Thunk/getFakeApiSearchTerm.js","Store/Actions/setFakeApiSearchTerm.js","Pages/HomePage/HomePage.js","Components/NavBar/NavBar.js","Components/CategoryList/CategoryList.js","App.js","Store/Reducers/searchTerm.js","Store/Reducers/gifList.js","Store/Reducers/fakeApiSearchTerm.js","Store/Reducers/index.js","index.js"],"names":["setGifList","gifList","type","setGifListLoading","isLoading","setGifListName","gifListName","setSearchTerm","searchTerm","getTrendingList","dispatch","axios","get","params","api_key","rating","limit","then","res","data","length","catch","err","console","log","getGifListCustom","getState","term","q","post","date","setFakeApiSearchTerm","createdAt","useStyles","makeStyles","root","backgroundColor","gridTile","height","tileBar","position","width","background","tileBarText","fontFamily","color","textTransform","search","padding","borderRadius","HomePage","classes","reduxStore","useSelector","state","loading","hdQuality","fakeApiSearchTerm","searchedDate","useDispatch","useState","loadingImageList","setLoadingImageList","matchesWidth","useMediaQuery","useTheme","breakpoints","up","useEffect","ErrorMessage","text","Box","display","justifyContent","alignItems","style","Typography","variant","CircularProgress","size","m","mb","className","InputBase","fullWidth","value","placeholder","onChange","e","target","onKeyDown","keyCode","IconButton","onClick","Search","marginBottom","Grid","container","spacing","wrap","item","Switch","checked","map","index","key","id","xs","sm","md","lg","includes","onLoad","concat","src","images","original","url","fixed_height_downsampled","objectFit","alt","title","align","mt","moment","format","theme","logo","letterSpacing","cursor","marginRight","toolbar","mixins","NavBar","openCloseMenu","matchesSize","trigger","useScrollTrigger","searchTrending","Slide","appear","direction","in","AppBar","Toolbar","Hidden","mdUp","Menu","fontSize","ml","flexWrap","Button","margin","ListItemStyled","withStyles","ListItem","CategoryList","list","selectedId","imageLoadArray","setData","categoryList","List","name","selected","button","ListItemIcon","Avatar","gif","fixed_height_small","ListItemText","minHeight","overflowY","overflow","boxShadow","webkitBoxShadow","outline","App","isOpen","setIsOpen","initialState","appReducer","combineReducers","action","createMuiTheme","typography","store","createStore","undefined","applyMiddleware","Thunk","ReactDOM","render","responsiveFontSizes","document","getElementById"],"mappings":"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","file":"static/js/main.e63deb43.chunk.js","sourcesContent":["export const setGifList = gifList => ({\r\n  type: \"setGifList\",\r\n  gifList\r\n});\r\n\r\nexport const setGifListLoading = isLoading => ({\r\n  type: \"setGifListLoading\",\r\n  isLoading\r\n});\r\n\r\nexport const setGifListName = gifListName => ({\r\n  type: \"setGifListName\",\r\n  gifListName\r\n});\r\n\r\nexport const setHdQuality = hdQuality => ({\r\n  type: \"setHdQuality\",\r\n  hdQuality\r\n});\r\n","export const setSearchTerm = searchTerm => ({\r\n  type: \"setSearchTerm\",\r\n  searchTerm\r\n});","import axios from \"axios\";\r\nimport { setGifListLoading, setGifList, setGifListName } from \"../Actions/setGifList\";\r\nimport { setSearchTerm } from \"../Actions/setSearchTerm\";\r\n\r\nexport const getTrendingList = () => (dispatch) => {\r\n    dispatch(setGifListLoading(true));\r\n    axios\r\n        .get(\"https://api.giphy.com/v1/gifs/trending\", {\r\n            params: {\r\n                api_key: \"WYuuWO9uW1KJpPALeDKJM0NdJkjnccax\",\r\n                rating: \"g\",\r\n                limit: \"25\",\r\n            },\r\n        })\r\n        .then((res) => {\r\n            if (res.data.data.length > 0) {\r\n                dispatch(setGifList(res.data.data));\r\n            } else dispatch(setGifList(\"No data\"));\r\n            dispatch(setGifListLoading(false));\r\n            dispatch(setGifListName(\"Trending GIFs\"));\r\n            dispatch(setSearchTerm(\"\"));\r\n        })\r\n        .catch((err) => {\r\n            dispatch(setGifListLoading(false));\r\n            dispatch(setGifList(\"Error\"));\r\n            console.log(err);\r\n        });\r\n};\r\n","import axios from \"axios\";\r\nimport { setGifList, setGifListLoading, setGifListName } from \"../Actions/setGifList\";\r\nimport { getFakeApiSearchTerm } from \"./getFakeApiSearchTerm\";\r\n\r\nexport const getGifListCustom = () => (dispatch, getState) => {\r\n    dispatch(setGifListLoading(true));\r\n    const term = getState().searchTerm.searchTerm;\r\n    axios\r\n        .get(\"https://api.giphy.com/v1/gifs/search\", {\r\n            params: {\r\n                api_key: \"WYuuWO9uW1KJpPALeDKJM0NdJkjnccax\",\r\n                q: term,\r\n                rating: \"g\",\r\n                limit: \"25\",\r\n            },\r\n        })\r\n        .then((res) => {\r\n            if (res.data.data.length > 0) {\r\n                dispatch(setGifList(res.data.data));\r\n            } else dispatch(setGifList(\"No data\"));\r\n            dispatch(setGifListLoading(false));\r\n            dispatch(setGifListName(term));\r\n            dispatch(getFakeApiSearchTerm());\r\n        })\r\n        .catch((err) => {\r\n            dispatch(setGifListLoading(false));\r\n            dispatch(setGifList(\"Error\"));\r\n            console.log(err);\r\n        });\r\n};\r\n","import axios from \"axios\";\r\nimport { setFakeApiSearchTerm } from \"../Actions/setFakeApiSearchTerm\";\r\n\r\nexport const getFakeApiSearchTerm = () => (dispatch, getState) => {\r\n    const term = getState().searchTerm.searchTerm;\r\n    axios\r\n        .post(\"https://reqres.in/api/users\", {\r\n            term: term,\r\n        })\r\n        .then((res) => {console.log(res.data); dispatch(setFakeApiSearchTerm(res.data.term, res.data.createdAt))})\r\n        .catch((err) => console.log(err));\r\n};\r\n","export const setFakeApiSearchTerm = (term, date) => ({\r\n    type: \"setFakeApiSearchTerm\",\r\n    term,\r\n    date,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    makeStyles,\r\n    Box,\r\n    Grid,\r\n    Switch,\r\n    InputBase,\r\n    IconButton,\r\n    CircularProgress,\r\n    Typography,\r\n    useMediaQuery,\r\n    useTheme,\r\n} from \"@material-ui/core\";\r\nimport { getTrendingList } from \"../../Store/Thunk/getTrendingList\";\r\nimport { getGifListCustom } from \"../../Store/Thunk/getGifListCustom\";\r\nimport { setSearchTerm } from \"../../Store/Actions/setSearchTerm\";\r\nimport { setHdQuality } from \"../../Store/Actions/setGifList\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: \"red\",\r\n    },\r\n    gridTile: {\r\n        height: \"300px\",\r\n    },\r\n    tileBar: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"25%\",\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\r\n    },\r\n    tileBarText: {\r\n        fontFamily: '\"Anton\", sans-serif',\r\n        color: \"#b3b3b3\",\r\n        textTransform: \"capitalize\",\r\n    },\r\n    search: {\r\n        backgroundColor: \"#8a0b31\",\r\n        padding: \"0 10px\",\r\n        borderRadius: \"5px\",\r\n    },\r\n});\r\nconst HomePage = () => {\r\n    const classes = useStyles();\r\n    const reduxStore = useSelector((state) => ({\r\n        gifList: state.gifList.gifList,\r\n        gifListName: state.gifList.gifListName,\r\n        loading: state.gifList.isLoading,\r\n        searchTerm: state.searchTerm.searchTerm,\r\n        hdQuality: state.gifList.hdQuality,\r\n        fakeApiSearchTerm: {\r\n            term: state.fakeApiSearchTerm.term,\r\n            date: state.fakeApiSearchTerm.searchedDate,\r\n        },\r\n    }));\r\n    const dispatch = useDispatch();\r\n    const [loadingImageList, setLoadingImageList] = useState([]);\r\n    const matchesWidth = useMediaQuery(useTheme().breakpoints.up(\"sm\"));\r\n    // const searchInputValue = useSelector((state) => state.);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTrendingList());\r\n    }, [dispatch]);\r\n\r\n    const loadedImage = (id) => {\r\n        setLoadingImageList(loadingImageList.concat(id));\r\n    };\r\n\r\n    const ErrorMessage = ({ text }) => {\r\n        return (\r\n            <Box height='90vh' width='100%' display='flex' justifyContent='center' alignItems='center' style={{ color: \"white\" }}>\r\n                <Typography variant='h4'>{text}</Typography>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    const changeQuality = () => {\r\n        setLoadingImageList([]);\r\n        dispatch(setHdQuality(!reduxStore.hdQuality));\r\n    };\r\n\r\n    const search = () => {\r\n        dispatch(getGifListCustom());\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        dispatch(setSearchTerm(e.target.value));\r\n    };\r\n\r\n    if (reduxStore.loading)\r\n        return (\r\n            <Box height='90vh' width='100%' display='flex' justifyContent='center' alignItems='center'>\r\n                <CircularProgress size={80} />\r\n            </Box>\r\n        );\r\n\r\n    if (reduxStore.gifList === \"Error\") {\r\n        return <ErrorMessage text='Error occured...' />;\r\n    }\r\n\r\n    if (reduxStore.gifList === \"No data\") {\r\n        return <ErrorMessage text='No data found' />;\r\n    }\r\n\r\n    return (\r\n        <Box width='90%' m='50px auto' style={{ color: \"white\" }}>\r\n            <Box mb='20px' display='flex' alignItems='center' justifyContent='space-between' className={classes.search}>\r\n                <InputBase\r\n                    fullWidth\r\n                    value={reduxStore.searchTerm}\r\n                    style={{ color: \"white\" }}\r\n                    placeholder='Search for GIF'\r\n                    onChange={handleChange}\r\n                    onKeyDown={(e) => (e.keyCode === 13 ? search() : null)}\r\n                />\r\n                <IconButton onClick={search}>\r\n                    <Search />\r\n                </IconButton>\r\n            </Box>\r\n            <Box display={matchesWidth ? \"flex\" : null} justifyContent='space-between' alignItems='center' width='100%'>\r\n                <Typography\r\n                    variant='h4'\r\n                    style={{\r\n                        fontFamily: '\"Righteous\", cursive',\r\n                        color: \"white\",\r\n                        marginBottom: \"10px\",\r\n                        textTransform: \"capitalize\",\r\n                    }}>\r\n                    {reduxStore.gifListName}\r\n                </Typography>\r\n                <Box>\r\n                    <Grid container alignItems='center' spacing={0} wrap='wrap'>\r\n                        <Grid item>Standart</Grid>\r\n                        <Grid item>\r\n                            <Switch checked={reduxStore.hdQuality} onChange={changeQuality} />\r\n                        </Grid>\r\n                        <Grid item>HD</Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Grid container spacing={1} wrap='wrap'>\r\n                {reduxStore.gifList.map((item, index) => {\r\n                    return (\r\n                        <Grid\r\n                            key={item.id}\r\n                            item\r\n                            xs={12}\r\n                            sm={6}\r\n                            md={index % 3 === 0 ? 6 : 3}\r\n                            lg={index % 3 === 0 ? 4 : 2}\r\n                            className={classes.gridTile}>\r\n                            <Box\r\n                                height='100%'\r\n                                width='100%'\r\n                                style={loadingImageList.includes(item.id) ? { position: \"relative\" } : { display: \"none\" }}>\r\n                                <img\r\n                                    height='100%'\r\n                                    width='100%'\r\n                                    onLoad={() => loadedImage(item.id)}\r\n                                    src={\r\n                                        reduxStore.hdQuality ? item.images.original.url : item.images.fixed_height_downsampled.url\r\n                                    }\r\n                                    style={{ objectFit: \"cover\", position: \"absolute\" }}\r\n                                    alt={item.title}\r\n                                />\r\n                                <Box className={classes.tileBar}>\r\n                                    <Typography className={classes.tileBarText} align='center' variant='h6'>\r\n                                        {item.title}\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            {loadingImageList.includes(item.id) ? null : (\r\n                                <Box\r\n                                    height='100%'\r\n                                    width='100%'\r\n                                    display='flex'\r\n                                    justifyContent='center'\r\n                                    alignItems='center'\r\n                                    style={{ backgroundColor: \"#212121\" }}>\r\n                                    <CircularProgress />\r\n                                </Box>\r\n                            )}\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n            <Box mt='50px'>\r\n                {reduxStore.fakeApiSearchTerm.term.length === 0 ? null : (\r\n                    <Box>\r\n                        <Typography variant='body2'>Details:</Typography>\r\n                        <Typography variant='body2'>Searched word: {reduxStore.fakeApiSearchTerm.term}</Typography>\r\n                        <Typography variant='body2'>\r\n                            Date: {moment(reduxStore.fakeApiSearchTerm.date).format(\"YYYY/MM/DD/HH:mm:ss\")}\r\n                        </Typography>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    Box,\r\n    Hidden,\r\n    IconButton,\r\n    Slide,\r\n    Button,\r\n    makeStyles,\r\n    useTheme,\r\n    useMediaQuery,\r\n    useScrollTrigger,\r\n} from \"@material-ui/core\";\r\nimport { Menu } from \"@material-ui/icons\";\r\n\r\nimport { getTrendingList } from \"../../Store/Thunk/getTrendingList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        color: \"white\",\r\n        backgroundColor: \"#121212\",\r\n    },\r\n    logo: {\r\n        fontFamily: '\"Righteous\", cursive',\r\n        letterSpacing: \"2px\",\r\n        cursor: \"pointer\",\r\n        marginRight: \"30px\",\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nconst NavBar = ({ openCloseMenu }) => {\r\n    const classes = useStyles();\r\n    const matchesSize = useMediaQuery(useTheme().breakpoints.up(\"md\"));\r\n    const trigger = useScrollTrigger();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const searchTrending = () => {\r\n        dispatch(getTrendingList());\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Slide appear={false} direction='down' in={!trigger}>\r\n                <AppBar className={classes.root}>\r\n                    <Box width={matchesSize ? \"80%\" : \"100%\"} m='auto'>\r\n                        <Toolbar>\r\n                            <Hidden mdUp>\r\n                                <Box m='0 10px 0 0'>\r\n                                    <IconButton size='small' onClick={openCloseMenu}>\r\n                                        <Menu fontSize='large' style={{ color: \"white\" }} />\r\n                                    </IconButton>\r\n                                </Box>\r\n                            </Hidden>\r\n                            <Typography onClick={searchTrending} className={classes.logo} variant='h3'>\r\n                                GifBF\r\n                            </Typography>\r\n                            <Box ml='auto' display='flex' alignItems='center' justifyContent='flex-end' flexWrap='wrap'>\r\n                                <Box>\r\n                                    <Button onClick={searchTrending} style={{ color: \"inherit\" }}>\r\n                                        <Typography align='center' variant='h6' style={{ margin: \"0 40px\" }}>\r\n                                            Trending GIFs\r\n                                        </Typography>\r\n                                    </Button>\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            {/* </Box> */}\r\n                        </Toolbar>\r\n                    </Box>\r\n                </AppBar>\r\n            </Slide>\r\n            <div className={classes.toolbar}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemIcon,\r\n    CircularProgress,\r\n    Avatar,\r\n    Box,\r\n    Typography,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { setSearchTerm } from \"../../Store/Actions/setSearchTerm\";\r\nimport { getGifListCustom } from \"../../Store/Thunk/getGifListCustom\";\r\n\r\nconst ListItemStyled = withStyles({\r\n    root: {\r\n        fontFamily: '\"Righteous\", cursive',\r\n        textTransform: \"capitalize\",\r\n        color: \"white\",\r\n        \"&.Mui-selected\": {\r\n            backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n        },\r\n        \"&.Mui-selected:hover\": {\r\n            backgroundColor: \"rgba(255, 255, 255, 0.6)\",\r\n        },\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n        },\r\n    },\r\n})(ListItem);\r\n\r\nconst CategoryList = () => {\r\n    const [data, setData] = useState({\r\n        list: null,\r\n        loading: true,\r\n        selectedId: null,\r\n        imageLoadArray: [],\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        categoryList();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const categoryList = () => {\r\n        axios\r\n            .get(\"https://api.giphy.com/v1/gifs/categories\", {\r\n                params: {\r\n                    api_key: \"WYuuWO9uW1KJpPALeDKJM0NdJkjnccax\",\r\n                },\r\n            })\r\n            .then((res) => {\r\n                setData({ ...data, list: res.data.data, loading: false });\r\n            })\r\n            .catch((err) => {\r\n                setData({ ...data, list: null, loading: false });\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const select = (id, name) => {\r\n        setData({ ...data, selectedId: id });\r\n        dispatch(setSearchTerm(name));\r\n        dispatch(getGifListCustom());\r\n    };\r\n\r\n    if (data.loading)\r\n        return (\r\n            <Box height='90vh' width='100%' display='flex' justifyContent='center' alignItems='center'>\r\n                <CircularProgress size={60} />\r\n            </Box>\r\n        );\r\n\r\n    if (data.list === null) return <Typography variant='body1'>Error occured...</Typography>;\r\n\r\n    return (\r\n        <List>\r\n            {/* jei reiks name kateforijos tai name_encoded gali but skiriasi biski pasiziurek console loge */}\r\n            {data.list.map((item, index) => {\r\n                return (\r\n                    <ListItemStyled\r\n                        onClick={() => select(index, item.name)}\r\n                        key={index}\r\n                        selected={data.selectedId === index ? true : false}\r\n                        button>\r\n                        <ListItemIcon>\r\n                            <Box>\r\n                                <Avatar\r\n                                    style={data.imageLoadArray.includes(index) ? null : { display: \"none\" }}\r\n                                    onLoad={() =>\r\n                                        setData({\r\n                                            ...data,\r\n                                            imageLoadArray: data.imageLoadArray.concat(index),\r\n                                        })\r\n                                    }\r\n                                    src={item.gif.images.fixed_height_small.url}\r\n                                />\r\n\r\n                                {data.imageLoadArray.includes(index) ? null : <CircularProgress />}\r\n                            </Box>\r\n                        </ListItemIcon>\r\n                        <ListItemText>\r\n                            <Typography>{item.name}</Typography>\r\n                        </ListItemText>\r\n                    </ListItemStyled>\r\n                );\r\n            })}\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default CategoryList;\r\n","import React, { useState } from \"react\";\r\nimport HomePage from \"./Pages/HomePage/HomePage\";\r\nimport NavBar from \"./Components/NavBar/NavBar\";\r\nimport {\r\n  Grid,\r\n  makeStyles,\r\n  Slide,\r\n  Box,\r\n  useMediaQuery,\r\n  useTheme\r\n} from \"@material-ui/core\";\r\nimport CategoryList from \"./Components/CategoryList/CategoryList\";\r\n\r\nconst useStyles = makeStyles({\r\n  item: {\r\n    minHeight: \"100vh\"\r\n  },\r\n  categoryList: {\r\n    width: \"200px\",\r\n    overflowY: \"scroll\",\r\n    overflow: \"hidden\",\r\n    height: \"100vh\",\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"0.4em\",\r\n      backgroundColor: \"#4f4f4f\"\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      boxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n      webkitBoxShadow: \"inset 0 0 6px rgba(0,0,0,0.00)\"\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      outline: \"1px solid slategrey\",\r\n      backgroundColor: \"#381737\"\r\n    }\r\n  }\r\n});\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const matchesSize = useMediaQuery(useTheme().breakpoints.up(\"md\"));\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const openCloseMenu = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar openCloseMenu={openCloseMenu} />\r\n      <Grid className={classes.item} container>\r\n        <Slide appear={false} direction=\"right\" in={matchesSize || isOpen}>\r\n          <Box\r\n            style={{ backgroundColor: \"#121212\" }}\r\n            display={matchesSize || isOpen ? null : \"none\"}\r\n          >\r\n            <Grid\r\n              style={matchesSize || isOpen ? null : { display: \"none\" }}\r\n              item\r\n              container\r\n              alignItems={null}\r\n              className={classes.categoryList}\r\n            >\r\n              <CategoryList />\r\n            </Grid>\r\n          </Box>\r\n        </Slide>\r\n        <Grid item xs>\r\n          <HomePage />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n  searchTerm: ''\r\n};\r\n\r\nexport const searchTerm = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"setSearchTerm\":\r\n      return {\r\n        ...state,\r\n        searchTerm: action.searchTerm\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  gifList: [],\r\n  gifListName: null,\r\n  isLoading: true,\r\n  hdQuality: false\r\n};\r\n\r\nexport const gifList = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"setGifList\":\r\n      return { ...state, gifList: action.gifList };\r\n    case \"setGifListLoading\":\r\n      return { ...state, isLoading: action.isLoading };\r\n    case \"setGifListName\":\r\n      return { ...state, gifListName: action.gifListName };\r\n    case \"setHdQuality\":\r\n      return { ...state, hdQuality: action.hdQuality };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n    term: \"\",\r\n    searchedDate: \"\",\r\n};\r\n\r\nexport const fakeApiSearchTerm = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"setFakeApiSearchTerm\":\r\n            return {\r\n                ...state,\r\n                term: action.term,\r\n                searchedDate: action.date,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { searchTerm } from \"./searchTerm\";\r\nimport { gifList } from \"./gifList\";\r\nimport { fakeApiSearchTerm } from \"./fakeApiSearchTerm\";\r\n\r\nconst appReducer = combineReducers({\r\n    searchTerm,\r\n    gifList,\r\n    fakeApiSearchTerm\r\n});\r\n\r\nexport const allReducer = (state, action) => {\r\n    if (action.type === \"RESET_APP\") {\r\n        state = undefined;\r\n    }\r\n    return appReducer(state, action);\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport {\r\n  MuiThemeProvider,\r\n  createMuiTheme,\r\n  responsiveFontSizes\r\n} from \"@material-ui/core\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport { allReducer } from \"./Store/Reducers\";\r\nimport Thunk from \"redux-thunk\";\r\nimport { applyMiddleware } from \"redux\";\r\n// import { logger } from \"redux-logger\";\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Baloo Bhai 2\", cursive'\r\n  }\r\n});\r\n\r\nconst store = createStore(allReducer, applyMiddleware(Thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={responsiveFontSizes(theme)}>\r\n      <App />\r\n    </MuiThemeProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}