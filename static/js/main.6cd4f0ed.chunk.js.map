{"version":3,"sources":["Store/Actions/setGifList.js","Store/Actions/setSearchTerm.js","Store/Thunk/getTrendingList.js","Pages/HomePage/HomePage.js","Store/Thunk/getGifListCustom.js","Components/NavBar/NavBar.js","Components/CategoryList/CategoryList.js","App.js","Store/Reducers/searchTerm.js","Store/Reducers/gifList.js","Store/Reducers/index.js","index.js"],"names":["setGifList","gifList","type","setGifListLoading","isLoading","setGifListName","gifListName","setSearchTerm","searchTerm","getTrendingList","dispatch","axios","get","params","api_key","then","res","data","length","catch","err","console","log","useStyles","makeStyles","root","backgroundColor","gridTile","height","tileBar","position","width","background","tileBarText","fontFamily","color","textTransform","HomePage","classes","reduxStore","useSelector","state","loading","hdQuality","useDispatch","useState","loadingImageList","setLoadingImageList","useEffect","trendingList","ErrorMessage","text","Box","display","justifyContent","alignItems","style","Typography","variant","CircularProgress","size","m","marginBottom","align","Grid","container","spacing","wrap","item","Switch","checked","onChange","map","index","key","id","xs","sm","md","lg","className","includes","onLoad","concat","src","images","original","url","fixed_height_downsampled","objectFit","alt","title","getGifListCustom","getState","term","q","theme","logo","letterSpacing","search","padding","borderRadius","toolbar","mixins","NavBar","openCloseMenu","matchesSize","useMediaQuery","useTheme","breakpoints","up","trigger","useScrollTrigger","searchInputValue","Slide","appear","direction","in","AppBar","Toolbar","Hidden","mdUp","IconButton","onClick","Menu","fontSize","ml","Button","margin","InputBase","value","placeholder","e","target","Search","ListItemStyled","withStyles","ListItem","CategoryList","list","selectedId","imageLoadArray","setData","categoryList","List","name","selected","button","ListItemIcon","Avatar","gif","fixed_height_small","ListItemText","minHeight","App","isOpen","setIsOpen","initialState","appReducer","combineReducers","action","createMuiTheme","typography","store","createStore","undefined","applyMiddleware","Thunk","ReactDOM","render","responsiveFontSizes","document","getElementById"],"mappings":"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","file":"static/js/main.6cd4f0ed.chunk.js","sourcesContent":["export const setGifList = gifList => ({\n  type: \"setGifList\",\n  gifList\n});\n\nexport const setGifListLoading = isLoading => ({\n  type: \"setGifListLoading\",\n  isLoading\n});\n\nexport const setGifListName = gifListName => ({\n  type: \"setGifListName\",\n  gifListName\n});\n\nexport const setHdQuality = hdQuality => ({\n  type: \"setHdQuality\",\n  hdQuality\n});\n","export const setSearchTerm = searchTerm => ({\n  type: \"setSearchTerm\",\n  searchTerm\n});","import axios from \"axios\";\nimport {\n  setGifListLoading,\n  setGifList,\n  setGifListName\n} from \"../Actions/setGifList\";\nimport { setSearchTerm } from \"../Actions/setSearchTerm\";\n\nexport const getTrendingList = () => dispatch => {\n  dispatch(setGifListLoading(true));\n  axios\n    .get(\"https://api.giphy.com/v1/gifs/trending\", {\n      params: {\n        api_key: \"WYuuWO9uW1KJpPALeDKJM0NdJkjnccax\"\n      }\n    })\n    .then(res => {\n      if (res.data.data.length > 0) {\n        dispatch(setGifList(res.data.data));\n      } else dispatch(setGifList(\"No data\"));\n      dispatch(setGifListLoading(false));\n      dispatch(setGifListName(\"Trending GIFs\"));\n      dispatch(setSearchTerm(\"\"));\n    })\n    .catch(err => {\n      dispatch(setGifListLoading(false));\n      dispatch(setGifList(\"Error\"));\n      console.log(err);\n    });\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  makeStyles,\n  Box,\n  Grid,\n  Switch,\n  CircularProgress,\n  Typography\n} from \"@material-ui/core\";\nimport { getTrendingList } from \"../../Store/Thunk/getTrendingList\";\nimport { setHdQuality } from \"../../Store/Actions/setGifList\";\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: \"red\"\n  },\n  gridTile: {\n    height: \"300px\"\n  },\n  tileBar: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"25%\",\n    background:\n      \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, \" +\n      \"rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\n  },\n  tileBarText: {\n    fontFamily: '\"Anton\", sans-serif',\n    color: \"#b3b3b3\",\n    textTransform: \"capitalize\"\n  }\n});\nconst HomePage = () => {\n  const classes = useStyles();\n  const reduxStore = useSelector(state => ({\n    gifList: state.gifList.gifList,\n    gifListName: state.gifList.gifListName,\n    loading: state.gifList.isLoading,\n    searchTerm: state.searchTerm.searchTerm,\n    hdQuality: state.gifList.hdQuality\n  }));\n  const dispatch = useDispatch();\n  const [loadingImageList, setLoadingImageList] = useState([]);\n  useEffect(() => {\n    trendingList();\n  }, []);\n\n  const trendingList = () => {\n    dispatch(getTrendingList());\n  };\n\n  const loadedImage = id => {\n    setLoadingImageList(loadingImageList.concat(id));\n  };\n\n  const ErrorMessage = ({ text }) => {\n    return (\n      <Box\n        height=\"90vh\"\n        width=\"100%\"\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{ color: \"white\" }}\n      >\n        <Typography variant=\"h4\">{text}</Typography>\n      </Box>\n    );\n  };\n\n  const changeQuality = () => dispatch(setHdQuality(!reduxStore.hdQuality));\n\n  if (reduxStore.loading)\n    return (\n      <Box\n        height=\"90vh\"\n        width=\"100%\"\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <CircularProgress size={80} />\n      </Box>\n    );\n\n  if (reduxStore.gifList === \"Error\") {\n    return <ErrorMessage text=\"Error occured...\" />;\n  }\n\n  if (reduxStore.gifList === \"No data\") {\n    return <ErrorMessage text=\"No data found\" />;\n  }\n\n  return (\n    <Box width=\"90%\" m=\"50px auto\" style={{ color: \"white\" }}>\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        width=\"100%\"\n      >\n        {\" \"}\n        <Typography\n          variant=\"h3\"\n          style={{\n            fontFamily: '\"Righteous\", cursive',\n            color: \"white\",\n            marginBottom: \"10px\",\n            textTransform: \"capitalize\"\n          }}\n        >\n          {reduxStore.gifListName}\n        </Typography>\n        <Box>\n          <Typography align=\"center\" variant=\"h6\">\n            Quality:\n          </Typography>\n          <Grid container alignItems=\"center\" spacing={1} wrap=\"nowrap\">\n            <Grid item>Standart</Grid>\n            <Grid item>\n              <Switch checked={reduxStore.hdQuality} onChange={changeQuality} />\n            </Grid>\n            <Grid item>HD</Grid>\n          </Grid>\n        </Box>\n      </Box>\n\n      <Grid container spacing={1} wrap=\"wrap\">\n        {reduxStore.gifList.map((item, index) => {\n          return (\n            <Grid\n              key={item.id}\n              item\n              xs={12}\n              sm={6}\n              md={index % 3 === 0 ? 6 : 3}\n              lg={index % 3 === 0 ? 4 : 2}\n              className={classes.gridTile}\n            >\n              <Box\n                height=\"100%\"\n                width=\"100%\"\n                style={\n                  loadingImageList.includes(item.id)\n                    ? { position: \"relative\" }\n                    : { display: \"none\" }\n                }\n              >\n                <img\n                  height=\"100%\"\n                  width=\"100%\"\n                  onLoad={() => loadedImage(item.id)}\n                  src={\n                    reduxStore.hdQuality\n                      ? item.images.original.url\n                      : item.images.fixed_height_downsampled.url\n                  }\n                  style={{ objectFit: \"cover\", position: \"absolute\" }}\n                  alt={item.title}\n                />\n                <Box className={classes.tileBar}>\n                  <Typography\n                    className={classes.tileBarText}\n                    align=\"center\"\n                    variant=\"h6\"\n                  >\n                    {item.title}\n                  </Typography>\n                </Box>\n              </Box>\n\n              {loadingImageList.includes(item.id) ? null : (\n                <Box\n                  height=\"100%\"\n                  width=\"100%\"\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  style={{ backgroundColor: \"#212121\" }}\n                >\n                  <CircularProgress />\n                </Box>\n              )}\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default HomePage;\n","import axios from \"axios\";\nimport {\n  setGifList,\n  setGifListLoading,\n  setGifListName\n} from \"../Actions/setGifList\";\n\nexport const getGifListCustom = () => (dispatch, getState) => {\n  dispatch(setGifListLoading(true));\n  const term = getState().searchTerm.searchTerm;\n  axios\n    .get(\"https://api.giphy.com/v1/gifs/search\", {\n      params: {\n        api_key: \"WYuuWO9uW1KJpPALeDKJM0NdJkjnccax\",\n        q: term\n      }\n    })\n    .then(res => {\n      if (res.data.data.length > 0) {\n        dispatch(setGifList(res.data.data));\n      } else dispatch(setGifList(\"No data\"));\n      dispatch(setGifListLoading(false));\n      dispatch(setGifListName(term));\n    })\n    .catch(err => {\n      dispatch(setGifListLoading(false));\n      dispatch(setGifList(\"Error\"));\n      console.log(err);\n    });\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  InputBase,\n  Box,\n  Hidden,\n  IconButton,\n  Slide,\n  Button,\n  makeStyles,\n  useTheme,\n  useMediaQuery,\n  useScrollTrigger\n} from \"@material-ui/core\";\nimport { Search, Menu } from \"@material-ui/icons\";\nimport { setSearchTerm } from \"../../Store/Actions/setSearchTerm\";\nimport { getGifListCustom } from \"../../Store/Thunk/getGifListCustom\";\nimport { getTrendingList } from \"../../Store/Thunk/getTrendingList\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    color: \"white\",\n    backgroundColor: \"#121212\"\n  },\n  logo: {\n    fontFamily: '\"Righteous\", cursive',\n    letterSpacing: \"2px\"\n  },\n  search: {\n    backgroundColor: \"gray\",\n    padding: \"0 10px\",\n    borderRadius: \"5px\"\n  },\n  toolbar: theme.mixins.toolbar\n}));\n\nconst NavBar = ({ openCloseMenu }) => {\n  const classes = useStyles();\n  const matchesSize = useMediaQuery(useTheme().breakpoints.up(\"md\"));\n  const trigger = useScrollTrigger();\n  const searchInputValue = useSelector(state => state.searchTerm.searchTerm);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setSearchTerm(e.target.value));\n  };\n\n  const search = () => {\n    dispatch(getGifListCustom());\n  };\n\n  return (\n    <div>\n      <Slide appear={false} direction=\"down\" in={!trigger}>\n        <AppBar className={classes.root}>\n          <Box width={matchesSize ? \"80%\" : \"100%\"} m=\"auto\">\n            <Toolbar>\n              <Hidden mdUp>\n                <Box m=\"0 10px 0 0\">\n                  <IconButton size=\"small\" onClick={openCloseMenu}>\n                    <Menu fontSize=\"large\" style={{ color: \"white\" }} />\n                  </IconButton>\n                </Box>\n              </Hidden>\n              <Typography className={classes.logo} variant=\"h3\">\n                GifBF\n              </Typography>\n              <Box\n                ml=\"auto\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"space-between\"\n              >\n                <Button\n                  onClick={() => dispatch(getTrendingList())}\n                  style={{ color: \"inherit\" }}\n                >\n                  <Typography\n                    align=\"center\"\n                    variant=\"h6\"\n                    style={{ margin: \"0 40px\" }}\n                  >\n                    Trending GIFs\n                  </Typography>\n                </Button>\n\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  className={classes.search}\n                >\n                  <InputBase\n                    value={searchInputValue}\n                    style={{ color: \"white\" }}\n                    placeholder=\"Search for GIF\"\n                    onChange={handleChange}\n                  />\n                  <IconButton onClick={search}>\n                    <Search />\n                  </IconButton>\n                </Box>\n              </Box>\n            </Toolbar>\n          </Box>\n        </AppBar>\n      </Slide>\n      <div className={classes.toolbar}></div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  CircularProgress,\n  Avatar,\n  Box,\n  Typography,\n  withStyles\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { setSearchTerm } from \"../../Store/Actions/setSearchTerm\";\nimport { getGifListCustom } from \"../../Store/Thunk/getGifListCustom\";\n\nconst ListItemStyled = withStyles({\n  root: {\n    fontFamily: '\"Righteous\", cursive',\n    textTransform: \"capitalize\",\n    color: \"white\",\n    \"&.Mui-selected\": {\n      backgroundColor: \"rgba(255, 255, 255, 0.5)\"\n    },\n    \"&.Mui-selected:hover\": {\n      backgroundColor: \"rgba(255, 255, 255, 0.6)\"\n    },\n    \"&:hover\": {\n      backgroundColor: \"rgba(255, 255, 255, 0.3)\"\n    }\n  }\n})(ListItem);\n\nconst CategoryList = () => {\n  const [data, setData] = useState({\n    list: null,\n    loading: true,\n    selectedId: null,\n    imageLoadArray: []\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    categoryList();\n  }, []);\n\n  const categoryList = () => {\n    axios\n      .get(\"https://api.giphy.com/v1/gifs/categories\", {\n        params: {\n          api_key: \"WYuuWO9uW1KJpPALeDKJM0NdJkjnccax\"\n        }\n      })\n      .then(res => {\n        setData({ ...data, list: res.data.data, loading: false });\n      })\n      .catch(err => {\n        setData({ ...data, list: null, loading: false });\n        console.log(err);\n      });\n  };\n\n  const select = (id, name) => {\n    setData({ ...data, selectedId: id });\n    dispatch(setSearchTerm(name));\n    dispatch(getGifListCustom());\n  };\n\n  if (data.loading)\n    return (\n      <Box\n        height=\"90vh\"\n        width=\"100%\"\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <CircularProgress size={60} />\n      </Box>\n    );\n\n  if (data.list === null)\n    return <Typography variant=\"body1\">Error occured...</Typography>;\n\n  return (\n    <List>\n      {/* jei reiks name kateforijos tai name_encoded gali but skiriasi biski pasiziurek console loge */}\n      {data.list.map((item, index) => {\n        return (\n          <ListItemStyled\n            onClick={() => select(index, item.name)}\n            key={index}\n            selected={data.selectedId === index ? true : false}\n            button\n          >\n            <ListItemIcon>\n              <Box>\n                <Avatar\n                  style={\n                    data.imageLoadArray.includes(index)\n                      ? null\n                      : { display: \"none\" }\n                  }\n                  onLoad={() =>\n                    setData({\n                      ...data,\n                      imageLoadArray: data.imageLoadArray.concat(index)\n                    })\n                  }\n                  src={item.gif.images.fixed_height_small.url}\n                />\n\n                {data.imageLoadArray.includes(index) ? null : (\n                  <CircularProgress />\n                )}\n              </Box>\n            </ListItemIcon>\n            <ListItemText>\n              <Typography>{item.name}</Typography>\n            </ListItemText>\n          </ListItemStyled>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default CategoryList;\n","import React, { useState } from \"react\";\nimport HomePage from \"./Pages/HomePage/HomePage\";\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport {\n  Grid,\n  makeStyles,\n  Slide,\n  // ClickAwayListener,\n  useMediaQuery,\n  useTheme\n} from \"@material-ui/core\";\nimport CategoryList from \"./Components/CategoryList/CategoryList\";\n\nconst useStyles = makeStyles({\n  item: {\n    minHeight: \"100vh\"\n  },\n  categoryList: {\n    backgroundColor: \"#121212\",\n    width: \"200px\"\n  }\n});\nfunction App() {\n  const classes = useStyles();\n  const matchesSize = useMediaQuery(useTheme().breakpoints.up(\"md\"));\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openCloseMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // const clickAwayCheck = () => {\n  //   if (matchesSize === false && !isOpen) setIsOpen(false);\n  // };\n\n  return (\n    <div>\n      <NavBar openCloseMenu={openCloseMenu} />\n      <Grid className={classes.item} container>\n        {/* <ClickAwayListener onClickAway={clickAwayCheck}> */}\n        <Slide appear={false} direction=\"right\" in={matchesSize || isOpen}>\n          <Grid\n            style={matchesSize || isOpen ? null : { display: \"none\" }}\n            className={classes.categoryList}\n            item\n            container\n            alignItems={null}\n          >\n            <CategoryList />\n          </Grid>\n        </Slide>\n        {/* </ClickAwayListener> */}\n        <Grid item xs>\n          <HomePage />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n  searchTerm: ''\n};\n\nexport const searchTerm = (state = initialState, action) => {\n  switch (action.type) {\n    case \"setSearchTerm\":\n      return {\n        ...state,\n        searchTerm: action.searchTerm\n      };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  gifList: [],\n  gifListName: null,\n  isLoading: true,\n  hdQuality: false\n};\n\nexport const gifList = (state = initialState, action) => {\n  switch (action.type) {\n    case \"setGifList\":\n      return { ...state, gifList: action.gifList };\n    case \"setGifListLoading\":\n      return { ...state, isLoading: action.isLoading };\n    case \"setGifListName\":\n      return { ...state, gifListName: action.gifListName };\n    case \"setHdQuality\":\n      return { ...state, hdQuality: action.hdQuality };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { searchTerm } from \"./searchTerm\";\nimport { gifList } from \"./gifList\";\n\nconst appReducer = combineReducers({\n  searchTerm,\n  gifList\n});\n\nexport const allReducer = (state, action) => {\n  if (action.type === \"RESET_APP\") {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  responsiveFontSizes\n} from \"@material-ui/core\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { allReducer } from \"./Store/Reducers\";\nimport Thunk from \"redux-thunk\";\nimport { applyMiddleware } from \"redux\";\n// import { logger } from \"redux-logger\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Baloo Bhai 2\", cursive'\n  }\n});\n\nconst store = createStore(allReducer, applyMiddleware(Thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <MuiThemeProvider theme={responsiveFontSizes(theme)}>\n      <App />\n    </MuiThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}